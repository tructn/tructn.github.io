{"pageProps":{"postData":{"id":"so-luoc-ve-tuple-trong-csharp","contentHtml":"<h3>Mình thường xài <code>Tuple</code> như thế nào</h3>\n<p>Đôi khi cần một cấu trúc dữ liệu đơn giản để chứa 2 đến 3 thuộc tính, ví dụ như <code>UserName</code> bên dưới.</p>\n<pre><code class=\"language-csharp\">class UserName\n{\n    public string FirstName {get; set;}\n    public string LastName {get; set;}\n}\n\nUserName GetUserName()\n{\n    //code\n}\n</code></pre>\n<p>Lúc này dùng Tuple không cần tạo thêm class hay struct.</p>\n<pre><code class=\"language-csharp\">(string FirstName, string LastName) GetUserName()\n{\n    //code\n}\n</code></pre>\n<p>Có thể gán giá trị cho tuple như vầy</p>\n<pre><code class=\"language-csharp\">(string FirstName, string LastName) name1 = (\"Truc\", \"Nguyen\");\n</code></pre>\n<p>Hoặc như vầy</p>\n<pre><code class=\"language-csharp\">var name2 = (LastName: \"Nguyen\", FirstName: \"Truc\");\n</code></pre>\n<p>Hoặc như vầy 😁</p>\n<pre><code class=\"language-csharp\">string FirstName = \"Truc\";\nstring LastName = \"Nguyen\";\nvar name = (FirstName, LastName);\n</code></pre>\n<p>Để lấy giá trị ra từ Tuple có thể viết (người ta gọi là <strong>destructing</strong>)</p>\n<pre><code class=\"language-csharp\">// code bên trên\n(string fName, string lName) = name;\n</code></pre>\n<blockquote>\n<p>Trước C# 7.0 thì Tuple không xịn được như vầy (có thể khái báo được <code>FirstName</code>, <code>LastName</code> strong tuple), vì các thuộc tính là <code>Item1</code>, <code>Item2</code>, <code>Item3</code>...</p>\n</blockquote>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\">https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7</a></li>\n</ul>\n","markdown":"### Mình thường xài ```Tuple``` như thế nào\nĐôi khi cần một cấu trúc dữ liệu đơn giản để chứa 2 đến 3 thuộc tính, ví dụ như ```UserName``` bên dưới.\n```csharp\nclass UserName\n{\n    public string FirstName {get; set;}\n    public string LastName {get; set;}\n}\n\nUserName GetUserName()\n{\n    //code\n}\n```\n\nLúc này dùng Tuple không cần tạo thêm class hay struct.\n```csharp\n(string FirstName, string LastName) GetUserName()\n{\n    //code\n}\n```\n\nCó thể gán giá trị cho tuple như vầy\n```csharp\n(string FirstName, string LastName) name1 = (\"Truc\", \"Nguyen\");\n```\nHoặc như vầy\n\n```csharp\nvar name2 = (LastName: \"Nguyen\", FirstName: \"Truc\");\n```\n\nHoặc như vầy 😁\n```csharp\nstring FirstName = \"Truc\";\nstring LastName = \"Nguyen\";\nvar name = (FirstName, LastName);\n```\n\nĐể lấy giá trị ra từ Tuple có thể viết (người ta gọi là **destructing**)\n```csharp\n// code bên trên\n(string fName, string lName) = name;\n```\n\n> Trước C# 7.0 thì Tuple không xịn được như vầy (có thể khái báo được ```FirstName```, ```LastName``` strong tuple), vì các thuộc tính là ```Item1```, ```Item2```, ```Item3```...\n\n### References\n- https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7","title":"Sơ lược về Tuple trong C#","date":"2021-09-29","tags":["c#"]}},"__N_SSG":true}